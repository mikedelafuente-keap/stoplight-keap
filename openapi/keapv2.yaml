swagger: '2.0'
info:
  version: 2.70.0.407641
  title: Keap REST API
  termsOfService: https://keap.com/legal
  contact:
    name: Keap
    url: https://developer.keap.com/get-support/
host: api.infusionsoft.com
basePath: /crm/rest/
tags:
  - name: Note
    description: Notes-V2-Endpoint
  - name: Batch
    description: Batch-V2-Endpoint
  - name: Locale
    description: Locale-V2-Endpoint
  - name: Users
    description: Rest User Controller
  - name: Referral
    description: Referrals-V2-Endpoint
  - name: Lead Sources
    description: Lead-Sources-V2-Endpoint
  - name: Contact
    description: Contacts-V2-Endpoint
  - name: Task
    description: Tasks-V2-Endpoint
  - name: Tags
    description: Tags-V2-Endpoint
  - name: Company
    description: Company-V2-Endpoint
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v2/batches/{batch_id}:
    get:
      tags:
        - Batch
      summary: Retrieve a Batch
      description: Retrieves details of a batch
      operationId: getBatchUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: batch_id
          in: path
          description: batch_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Batch'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/companies:
    get:
      tags:
        - Company
      summary: List Companies
      description: Retrieves a list of all Companies
      operationId: listCompaniesUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
        - name: fields
          in: query
          description: Comma-delimited list of Company properties to include in the response. (Fields such as `notes`, `fax_number` and `custom_fields` aren't included, by default.)
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListCompaniesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Company
      summary: Create a Company
      description: Creates a new Company.`country_code` is required if `region` is specified.
      operationId: createCompanyUsingPOST_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: company
          description: company
          required: false
          schema:
            $ref: '#/definitions/CreateCompanyRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Company'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/companies/{company_id}:
    get:
      tags:
        - Company
      summary: Retrieve a Company
      description: Retrieves a single Company
      operationId: getCompanyUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: company_id
          in: path
          description: company_id
          required: true
          type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of Company properties to include in the response. (Available fields are: `company_name`, `address`, `custom_fields`, `email_address`, `fax_number`, `phone_number`, `website`, `notes`)'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Company'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Company
      summary: Delete a Company
      description: Deletes the specified Company
      operationId: deleteCompanyUsingDELETE_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: company_id
          in: path
          description: company_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Company
      summary: Update a Company
      description: Updates a Company with the values provided in the request
      operationId: patchCompanyUsingPATCH_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: company
          description: company
          required: false
          schema:
            $ref: '#/definitions/PatchCompanyRequest'
        - name: company_id
          in: path
          description: company_id
          required: true
          type: string
        - name: update_mask
          in: query
          description: An optional list of properties to be updated. If set, only the provided properties will be updated and others will be skipped.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - id
            - company_name
            - address
            - phone_number
            - fax_number
            - email_address
            - notes
            - website
            - custom_fields
            - create_time
            - update_time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Company'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts:
    get:
      tags:
        - Contact
      summary: List Contacts
      description: Retrieves a list of contacts
      operationId: listContactsUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
        - name: page_token
          in: query
          description: page token
          required: false
          type: string
        - name: order_by
          in: query
          description: Attribute and direction to order items by. E.g. 'given_name desc'
          required: false
          type: string
        - name: page_size
          in: query
          description: Total number of items to return per page
          required: false
          type: integer
          maximum: 1000
          minimum: 1
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListContactsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Contact
      summary: Create a Contact
      description: 'Creates a new contact as the authenticated user. NB: Contact must contain at least one item in `email_addresses` or `phone_numbers` and `country_code` is required if `region` is specified.'
      operationId: createContactUsingPOST_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: contact
          description: contact
          required: false
          schema:
            $ref: '#/definitions/CreatePatchContactRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Contact'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts/batch:
    post:
      tags:
        - Contact
      summary: Batch Create Contact
      description: Creates up to 1000 Contacts.See POST /contacts for individual payload specifics.
      operationId: batchCreateContactsUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: contacts
          description: contacts
          required: false
          schema:
            $ref: '#/definitions/BatchCreateContactRequest'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/CreateBatchResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts/links/types:
    post:
      tags:
        - Contact
      summary: Create a Contact Link Type
      description: Creates a new type of contact link.
      operationId: createContactLinkTypeUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/CreateContactLinkTypeRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ContactLinkType'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts/{contact_id}:
    get:
      tags:
        - Contact
      summary: Retrieve a Contact
      description: Retrieves a single Contact
      operationId: getContactUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of Contact properties to include in the response. (Available fields are: `score_value`, `addresses`, `anniversary`, `birthday`, `company`, `contact_type`, `custom_fields`, `create_time`, `email_addresses`, `fax_numbers`, `job_title`, `update_date`, `leadsource_id`,`middle_name`, `origin`, `owner_id`, `phone_numbers`, `preferred_locale`, `preferred_name`,`prefix`, `relationships`, `social_accounts`, `source_type`, `spouse_name`, `suffix`, `time_zone`,`website`, `tag_ids`)'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Contact'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Contact
      summary: Delete a Contact
      description: Deletes the specified contact.
      operationId: deleteContactUsingDELETE_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Contact
      summary: Update a Contact
      description: Updates a contact with only the values provided in the request.
      operationId: patchContactUsingPATCH_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: contact
          description: contact
          required: false
          schema:
            $ref: '#/definitions/CreatePatchContactRequest'
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
        - name: update_mask
          in: query
          description: An optional list of properties to be updated. If set, only the provided properties will be updated and others will be skipped.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - addresses
            - anniversary
            - birthday
            - company
            - contact_type
            - custom_fields
            - email_addresses
            - family_name
            - fax_numbers
            - given_name
            - job_title
            - lead_source_id
            - links
            - middle_name
            - notes
            - opt_in_reason
            - origin
            - owner_id
            - phone_numbers
            - preferred_locale
            - preferred_name
            - prefix
            - referral_code
            - social_accounts
            - source_type
            - spouse_name
            - suffix
            - time_zone
            - website
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Contact'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts/{contact_id}/links:
    get:
      tags:
        - Contact
      summary: List contact links
      description: Retrieves a list of linked contacts
      operationId: listContactLinksUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListContactLinksResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts/{contact_id}/notes:
    get:
      tags:
        - Note
      summary: List Notes
      description: Retrieves a list of notes
      operationId: listNotesUsingGET_2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListNotesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Note
      summary: Create a Note
      description: Creates a new note as the authenticated user. Either a "title" or "body" is required
      operationId: createNoteUsingPOST_2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/CreateNoteRequest'
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Note'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts/{contact_id}/notes/{note_id}:
    get:
      tags:
        - Note
      summary: Get a Note
      description: Get the specified note
      operationId: getNoteUsingGET_2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
        - name: note_id
          in: path
          description: note_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetNoteResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Note
      summary: Delete a Note
      description: Deletes the specified note
      operationId: deleteNoteUsingDELETE_2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
        - name: note_id
          in: path
          description: note_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Note
      summary: Update a note
      description: Update a note for a contact
      operationId: updateNoteUsingPATCH
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          type: string
        - name: note_id
          in: path
          description: note_id
          required: true
          type: string
        - in: body
          name: updateNoteRequest
          description: updateNoteRequest
          required: true
          schema:
            $ref: '#/definitions/UpdateNoteRequest'
        - name: update_mask
          in: query
          description: An optional list of fields to be updated. If set, only the provided properties will be updated and others will be skipped.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - contact_id
            - text
            - title
            - type
            - user_id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdateNoteResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts:link:
    post:
      tags:
        - Contact
      summary: Link a contact
      description: Links two contacts together using the provided link type id
      operationId: linkContactsUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: linkContactsRequest
          description: linkContactsRequest
          required: true
          schema:
            $ref: '#/definitions/LinkContactsRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ContactLink'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/contacts:unlink:
    post:
      tags:
        - Contact
      summary: Delete link between two contacts
      description: Deletes link between two contacts by using the provided contact ids and link id
      operationId: unlinkContactsUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: linkContactsRequest
          description: linkContactsRequest
          required: true
          schema:
            $ref: '#/definitions/LinkContactsRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/leadsources:
    get:
      tags:
        - Lead Sources
      summary: List Lead Sources
      description: Retrieves a list of lead sources
      operationId: listLeadSourcesUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListLeadSourcesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Lead Sources
      summary: Create a Lead Source
      description: Creates a new Lead Source
      operationId: createLeadSourceUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: leadsource
          description: leadsource
          required: false
          schema:
            $ref: '#/definitions/CreateLeadSourceRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/LeadSource'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/locales/countries:
    get:
      tags:
        - Locale
      summary: List Countries
      operationId: listCountriesUsingGET_4
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListCountriesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/locales/countries/{country_code}/provinces:
    get:
      tags:
        - Locale
      summary: List a Country's Provinces
      operationId: listProvincesForCountryUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: country_code
          in: path
          description: country_code
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListProvincesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/oauth/connect/userinfo:
    get:
      tags:
        - Users
      summary: Retrieve User Info
      description: Retrieves information for the current authenticated end-user, as outlined by the [OpenID Connect specification](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo).
      operationId: getUserInfoUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetUserInfoResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/referrals:
    post:
      tags:
        - Referral
      summary: Create a Referral
      description: Creates a new referral partner referral on the provided contact
      operationId: createReferralUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/CreateReferralRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Referral'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/tags:
    get:
      tags:
        - Tags
      summary: List Tags
      description: |-
        Retrieve a list of tags defined in the application.
        To search for null or empty fields use filter==NONE
      operationId: listTagsUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListTagsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Tags
      summary: Create Tag
      description: Create a new tag
      operationId: createTagUsingPOST_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tag
          description: tag
          required: true
          schema:
            $ref: '#/definitions/CreateUpdateTagRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Tag'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/categories:
    get:
      tags:
        - Tags
      summary: List Tag Categories
      description: |-
        Retrieve a list of tag categories defined in the application
        To search for null or empty fields use filter==NONE
      operationId: listTagCategoriesUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListTagCategoriesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Tags
      summary: Create Tag Category
      description: Create a new tag category
      operationId: createTagCategoryUsingPOST_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/CreateUpdateTagCategoryRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Tag'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/categories/{tag_category_id}:
    get:
      tags:
        - Tags
      summary: Retrieve a Tag Category
      description: Returns the tag category with the specified category_id
      operationId: getCategoryUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_category_id
          in: path
          description: tag_category_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetTagCategoryResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Tags
      summary: Delete Tag Category
      description: Deletes the specified Tag Category
      operationId: deleteTagCategoryUsingDELETE_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_category_id
          in: path
          description: tag_category_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Tags
      summary: Update a Tag Category
      description: Updates a tag category with only the values provided in the request
      operationId: patchTagCategoryUsingPATCH_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tagCategory
          description: tagCategory
          required: false
          schema:
            $ref: '#/definitions/CreateUpdateTagCategoryRequest'
        - name: tag_category_id
          in: path
          description: tag_category_id
          required: true
          type: string
        - name: update_mask
          in: query
          description: An optional list of fields to be updated. If set, only the fields provided in the update_mask will be updated and others will be skipped.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - name
            - description
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdateTagCategoryResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/{tag_id}:
    get:
      tags:
        - Tags
      summary: Retrieve a Tag
      description: Returns the tag with the specified tagId
      operationId: getTagUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_id
          in: path
          description: tag_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tag'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Tags
      summary: Delete Tag
      description: Delete Tag by tag id
      operationId: deleteTagUsingDELETE_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_id
          in: path
          description: tag_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Tags
      summary: Update a Tag
      description: Updates a tag with only the values provided in the request
      operationId: patchTagUsingPATCH_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tag
          description: tag
          required: false
          schema:
            $ref: '#/definitions/CreateUpdateTagRequest'
        - name: tag_id
          in: path
          description: tag_id
          required: true
          type: string
        - name: update_mask
          in: query
          description: An optional list of fields to be updated. If set, only the fields provided in the update_mask will be updated and others will be skipped.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - name
            - description
            - category
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdateTagResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/{tag_id}/companies:
    get:
      tags:
        - Tags
      summary: List Tagged Companies
      description: |-
        Retrieves a list of companies that have the given tag applied
        To search for null or empty fields use filter==NONE
      operationId: listCompaniesForTagIdUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_id
          in: path
          description: tag_id
          required: true
          type: string
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListTaggedCompaniesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/{tag_id}/contacts:
    get:
      tags:
        - Tags
      summary: Retrieve a list of contacts with specific tag
      description: |-
        Retrieve a list of contacts
        To search for null or empty fields use filter==NONE
      operationId: listContactsWithTagIdUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_id
          in: path
          description: tag_id
          required: true
          type: string
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListTaggedContactsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/{tag_id}/contacts:applyTags:
    post:
      tags:
        - Tags
      summary: Apply Tags
      description: Apply Tag to a list of contact records
      operationId: applyTagsUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_id
          in: path
          description: tag_id
          required: true
          type: string
        - in: body
          name: applyRemoveTagRequest
          description: applyRemoveTagRequest
          required: true
          schema:
            $ref: '#/definitions/ApplyRemoveTagRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplyTagsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/tags/{tag_id}/contacts:removeTags:
    post:
      tags:
        - Tags
      summary: Remove Tags
      description: Remove a Tag from a list of contact records
      operationId: removeTagsUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tag_id
          in: path
          description: tag_id
          required: true
          type: string
        - in: body
          name: applyRemoveTagRequest
          description: applyRemoveTagRequest
          required: true
          schema:
            $ref: '#/definitions/ApplyRemoveTagRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/tasks:
    get:
      tags:
        - Task
      summary: List Tasks
      description: Retrieve a list of tasks based on the provided filter. Tasks which are not assigned to a User may be queried with user_id==UNASSIGNED.
      operationId: listTasksUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListTasksResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Task
      summary: Create a Task
      description: Creates a new task as the authenticated user.
      operationId: createTaskUsingPOST_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: task
          description: task
          required: false
          schema:
            $ref: '#/definitions/CreateTaskRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/tasks/model:
    get:
      tags:
        - Task
      summary: Retrieve Task Model
      description: Get the custom fields for the Task object
      operationId: retrieveTaskModelUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ObjectModel'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/tasks/model/customFields:
    post:
      tags:
        - Task
      summary: Create a Custom Field
      description: Adds a custom field of the specified type and options to the Task object.
      operationId: createTaskCustomFieldUsingPOST_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: customField
          description: customField
          required: true
          schema:
            $ref: '#/definitions/CreateCustomFieldRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CreateCustomFieldResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/tasks/{task_id}:
    get:
      tags:
        - Task
      summary: Retrieve a Task
      description: Retrieves a single task
      operationId: getTaskUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: task_id
          in: path
          description: task_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Task'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Task
      summary: Delete a Task
      description: Deletes a single task
      operationId: deleteTaskUsingDELETE_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: task_id
          in: path
          description: task_id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Task
      summary: Update a Task
      description: Updates a task with only the values provided in the request
      operationId: patchTaskUsingPATCH_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: task
          description: task
          required: false
          schema:
            $ref: '#/definitions/CreatePatchTaskRequest'
        - name: task_id
          in: path
          description: task_id
          required: true
          type: string
        - name: update_mask
          in: query
          description: An optional list of properties to be updated. If set, only the provided properties will be updated and others will be skipped.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - id
            - title
            - description
            - type
            - priority
            - completion_time
            - due_time
            - remind_time_mins
            - assigned_to_user_id
            - contact_id
            - completed
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdateTaskResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/users:
    get:
      tags:
        - Users
      summary: List Users
      description: Retrieves a list of users
      operationId: listUsersUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: filter
          in: query
          description: Search filter to apply to results
          required: false
          type: string
        - name: order_by
          in: query
          description: Attribute and direction to order items by. E.g. 'given_name desc'
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListUserResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Users
      summary: Create a User
      description: 'Creates a new user record. NB: Users will be invited to the application and remain in the "Invited" status until the user accepts the invite. "Inactive" users will not take up a user license.'
      operationId: createUserUsingPOST_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: user
          required: false
          schema:
            $ref: '#/definitions/CreateUserRequestV2'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
  /v2/users/{user_id}:
    get:
      tags:
        - Users
      summary: Get User
      description: Retrieves a specific User
      operationId: getUserByIdUsingGET_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - Users
      summary: Update User
      description: Updates information on a specific User
      operationId: patchUserUsingPATCH_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: string
        - in: body
          name: user
          description: user
          required: false
          schema:
            $ref: '#/definitions/PatchUserRequestV2'
        - name: update_mask
          in: query
          description: An optional list of fields to be updated. If set, only the provided fields will be updated and others will be skipped.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - address
            - company_name
            - email_address
            - family_name
            - fax_numbers
            - given_name
            - job_title
            - phone_numbers
            - time_zone
            - website
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
  /v2/users/{user_id}/signature:
    get:
      tags:
        - Users
      summary: Get User email signature
      description: Retrieves a HTML snippet that contains the user's email signature.
      operationId: getUserSignatureUsingGET_3
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
securityDefinitions:
  oauth2:
    type: oauth2
    authorizationUrl: https://accounts.infusionsoft.com/app/oauth/authorize
    tokenUrl: https://api.infusionsoft.com/token
    flow: accessCode
definitions:
  CustomFieldValue:
    type: object
    properties:
      content:
        type: object
      id:
        type: string
  Origin:
    type: object
    properties:
      date:
        type: string
      ip_address:
        type: string
  CustomFieldMetaData:
    type: object
    properties:
      field_type:
        type: string
        enum:
          - CURRENCY
          - DATE
          - DATE_TIME
          - DAY_OF_WEEK
          - DECIMAL_NUMBER
          - DRILLDOWN
          - DROPDOWN
          - EMAIL
          - LIST_BOX
          - MONTH
          - NAME
          - PERCENT
          - PHONE_NUMBER
          - RADIO
          - SOCIAL_SECURITY_NUMBER
          - STATE
          - TEXT
          - TEXT_AREA
          - USER
          - USER_LIST_BOX
          - WEBSITE
          - WHOLE_NUMBER
          - YEAR
          - YES_NO
      id:
        type: integer
        format: int64
      label:
        type: string
      options:
        type: array
        items:
          $ref: '#/definitions/CustomFieldOption'
      record_type:
        type: string
        enum:
          - CONTACT
          - REFERRAL_PARTNER
          - OPPORTUNITY
          - TASK_NOTE_APPOINTMENT
          - COMPANY
          - ORDER
          - SUBSCRIPTION
  Company:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      company_name:
        type: string
      create_time:
        type: string
      custom_fields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldValue'
      email_address:
        $ref: '#/definitions/EmailAddress'
      fax_number:
        $ref: '#/definitions/FaxNumber'
      id:
        type: string
      notes:
        type: string
      phone_number:
        $ref: '#/definitions/PhoneNumber'
      update_time:
        type: string
      website:
        type: string
  Task:
    type: object
    properties:
      assigned_to_user_id:
        type: string
      completed:
        type: boolean
      completion_time:
        type: string
      contact_id:
        type: string
      create_time:
        type: string
        description: On initial object the returned value for this property may not accurately represent the exact stored value.
      created_by_user_id:
        type: string
      description:
        type: string
      due_time:
        type: string
      id:
        type: string
      modification_time:
        type: string
      priority:
        type: string
        enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
      remind_time_mins:
        type: integer
        format: int32
      title:
        type: string
      type:
        type: string
        enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
  CreateCustomFieldResponse:
    type: object
    properties:
      custom_field:
        $ref: '#/definitions/CustomFieldMetaData'
  CreateCompanyRequest:
    type: object
    required:
      - company_name
    properties:
      address:
        $ref: '#/definitions/Address'
      company_name:
        type: string
      custom_fields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldValue'
      email_address:
        $ref: '#/definitions/EmailAddress'
      fax_number:
        $ref: '#/definitions/FaxNumber'
      notes:
        type: string
      phone_number:
        $ref: '#/definitions/PhoneNumber'
      website:
        type: string
  ListContactLinksResponse:
    type: object
    properties:
      links:
        type: array
        items:
          $ref: '#/definitions/ContactLink'
      next_page_token:
        type: string
  ListUserResponse:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
  Address:
    type: object
    properties:
      country:
        type: string
      country_code:
        type: string
      field:
        type: string
        enum:
          - ADDRESS_FIELD_UNSPECIFIED
          - BILLING
          - SHIPPING
          - OTHER
      line1:
        type: string
      line2:
        type: string
      locality:
        type: string
      postal_code:
        type: string
      region:
        type: string
      region_code:
        type: string
      zip_code:
        type: string
      zip_four:
        type: string
  LeadSourceCategory:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  ContactLinkType:
    type: object
    properties:
      id:
        type: string
      max_links:
        type: integer
        format: int64
      name:
        type: string
  CreateUpdateTagCategoryRequest:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
  CreatePatchContactRequest:
    type: object
    properties:
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
      anniversary_date:
        type: string
      birth_date:
        type: string
      company:
        $ref: '#/definitions/BasicCompany'
      contact_type:
        type: string
      custom_fields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldValue'
      email_addresses:
        type: array
        items:
          $ref: '#/definitions/EmailAddressRequest'
      family_name:
        type: string
      fax_numbers:
        type: array
        items:
          $ref: '#/definitions/FaxNumber'
      given_name:
        type: string
      job_title:
        type: string
      leadsource_id:
        type: string
      middle_name:
        type: string
      origin:
        $ref: '#/definitions/OriginRequest'
      owner_id:
        type: string
      phone_numbers:
        type: array
        items:
          $ref: '#/definitions/PhoneNumber'
      preferred_locale:
        type: string
        example: en_US
      preferred_name:
        type: string
      prefix:
        type: string
      referral_code:
        type: string
      social_accounts:
        type: array
        items:
          $ref: '#/definitions/SocialAccount'
      source_type:
        type: string
        enum:
          - SOURCE_TYPE_UNSPECIFIED
          - API
          - APPOINTMENT
          - FORM_API_HOSTED
          - FORM_API_INTERNAL
          - IMPORT
          - INTERNAL_FORM
          - LANDING_PAGE
          - MANUAL
          - OTHER
          - UNKNOWN
          - WEBFORM
      spouse_name:
        type: string
      suffix:
        type: string
      time_zone:
        type: string
      website:
        type: string
  ListTasksResponse:
    type: object
    properties:
      next_page_token:
        type: string
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
  CategoryReference:
    type: object
    properties:
      id:
        type: string
  GetTagCategoryResponse:
    type: object
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
  PatchUserRequestV2:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      company_name:
        type: string
      email_address:
        $ref: '#/definitions/EmailAddressRequest'
      family_name:
        type: string
      fax_numbers:
        type: array
        items:
          $ref: '#/definitions/FaxNumber'
      given_name:
        type: string
      phone_numbers:
        type: array
        items:
          $ref: '#/definitions/PhoneNumber'
      time_zone:
        type: string
      title:
        type: string
      website:
        type: string
  FaxNumber:
    type: object
    properties:
      field:
        type: string
        enum:
          - FAX_NUMBER_FIELD_UNSPECIFIED
          - FAX1
          - FAX2
      number:
        type: string
      type:
        type: string
  CreateBatchResponse:
    type: object
    properties:
      create_time:
        type: string
      created_by_user_id:
        type: string
      id:
        type: string
  ListTaggedContactsResponse:
    type: object
    properties:
      contacts:
        type: array
        items:
          $ref: '#/definitions/BasicContact'
      next_page_token:
        type: string
  ListProvincesResponse:
    type: object
    required:
      - provinces
    properties:
      provinces:
        type: array
        description: A key-value pair of province code and province name.
        items:
          $ref: '#/definitions/Provinces'
  ListNotesResponse:
    type: object
    properties:
      next_page_token:
        type: string
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
  EmailAddress:
    type: object
    properties:
      email:
        type: string
      email_opt_status:
        type: string
        enum:
          - UNENGAGED_MARKETABLE
          - SINGLE_OPT_IN
          - DOUBLE_OPT_IN
          - CONFIRMED
          - UNENGAGED_NON_MARKETABLE
          - NON_MARKETABLE
          - LOCKDOWN
          - BOUNCE
          - HARD_BOUNCE
          - MANUAL
          - ADMIN
          - SYSTEM
          - LIST_UNSUBSCRIBE
          - FEEDBACK
          - SPAM
          - INVALID
          - DEACTIVATED
      field:
        type: string
        enum:
          - EMAIL_FIELD_UNSPECIFIED
          - EMAIL1
          - EMAIL2
          - EMAIL3
      is_opt_in:
        type: boolean
      opt_in_reason:
        type: string
  ListCountriesResponse:
    type: object
    required:
      - countries
    properties:
      countries:
        type: array
        description: A key-value pair of country code and country name.
        items:
          $ref: '#/definitions/Country'
  ListTaggedCompaniesResponse:
    type: object
    properties:
      next_page_token:
        type: string
      tagged_companies:
        type: array
        items:
          $ref: '#/definitions/TaggedCompany'
  CreateCustomFieldRequest:
    type: object
    required:
      - field_type
      - label
    properties:
      field_type:
        type: string
        enum:
          - CURRENCY
          - DATE
          - DATE_TIME
          - DAY_OF_WEEK
          - DECIMAL_NUMBER
          - DRILLDOWN
          - DROPDOWN
          - EMAIL
          - LIST_BOX
          - MONTH
          - NAME
          - PERCENT
          - PHONE_NUMBER
          - RADIO
          - SOCIAL_SECURITY_NUMBER
          - STATE
          - TEXT
          - TEXT_AREA
          - USER
          - USER_LIST_BOX
          - WEBSITE
          - WHOLE_NUMBER
          - YEAR
          - YES_NO
      group_id:
        type: string
        description: An optional tab group to place the field under in the interface.  If not specified, will default to the 'Custom Fields' tab.
      label:
        type: string
      options:
        type: array
        items:
          $ref: '#/definitions/CreateCustomFieldOptionRequest'
      user_group_id:
        type: string
        description: An optional user group to choose from when selecting values for User or UserListBox fields.
  LeadSource:
    type: object
    properties:
      category:
        $ref: '#/definitions/LeadSourceCategory'
      description:
        type: string
      end_time:
        type: string
      id:
        type: string
      medium:
        type: string
      message:
        type: string
      name:
        type: string
      start_time:
        type: string
      status_is_active:
        type: boolean
      vendor:
        type: string
  BasicContact:
    type: object
    properties:
      email:
        type: string
      family_name:
        type: string
      given_name:
        type: string
      id:
        type: string
  CreateTaskRequest:
    type: object
    required:
      - assigned_to_user_id
    properties:
      assigned_to_user_id:
        type: string
      completed:
        type: boolean
      completion_time:
        type: string
      contact_id:
        type: string
      description:
        type: string
      due_time:
        type: string
      priority:
        type: string
        enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
      remind_time_mins:
        type: integer
        format: int32
        description: Value in minutes before start_date to show pop-up reminder.  Acceptable values are [5,10,15,30,60,120,240,480,1440,2880]
      title:
        type: string
      type:
        type: string
        enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
  UpdateTagResponse:
    type: object
    properties:
      category:
        $ref: '#/definitions/CategoryReference'
      description:
        type: string
      id:
        type: string
      name:
        type: string
  Note:
    type: object
    properties:
      assigned_to_user:
        $ref: '#/definitions/BasicUser'
      contact_id:
        type: string
      create_time:
        type: string
      id:
        type: string
      last_updated_by_user_id:
        type: string
      text:
        type: string
      title:
        type: string
      type:
        type: string
      update_time:
        type: string
  Throwable:
    type: object
    properties:
      cause:
        $ref: '#/definitions/Throwable'
      localizedMessage:
        type: string
      message:
        type: string
      stackTrace:
        type: array
        items:
          $ref: '#/definitions/StackTraceElement'
      suppressed:
        type: array
        items:
          $ref: '#/definitions/Throwable'
  ListCompaniesResponse:
    type: object
    properties:
      companies:
        type: array
        items:
          $ref: '#/definitions/Company'
      next_page_token:
        type: string
  Country:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
  Link:
    type: object
    properties:
      id:
        type: string
      link_type_id:
        type: string
      linked_contact_id:
        type: string
  LinkContactsRequest:
    type: object
    properties:
      contact1_id:
        type: string
      contact2_id:
        type: string
      link_type_id:
        type: string
  CreateUpdateTagRequest:
    type: object
    properties:
      category:
        $ref: '#/definitions/CategoryReference'
      description:
        type: string
      name:
        type: string
  ListTagsResponse:
    type: object
    properties:
      next_page_token:
        type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
  ObjectModel:
    type: object
    properties:
      custom_fields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldMetaData'
      optional_properties:
        type: array
        description: These fields are not transmitted by default on this model, but can be requested by specifying them in a comma-separated list in the optional_properties query parameter.
        items:
          type: string
  User:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      admin:
        type: boolean
      company_name:
        type: string
      create_time:
        type: string
      created_by:
        type: integer
        format: int64
      email_address:
        $ref: '#/definitions/EmailAddress'
      family_name:
        type: string
      fax_numbers:
        type: array
        items:
          $ref: '#/definitions/FaxNumber'
      given_name:
        type: string
      global_user_id:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      keap_id:
        type: string
      partner:
        type: boolean
      phone_numbers:
        type: array
        items:
          $ref: '#/definitions/PhoneNumber'
      social_accounts:
        type: array
        items:
          $ref: '#/definitions/SocialAccount'
      status:
        type: string
        enum:
          - Active
          - Invited
          - Inactive
          - NotAUser
      time_zone:
        type: string
      title:
        type: string
      update_time:
        type: string
      updated_by:
        type: integer
        format: int64
      website:
        type: string
  CreateReferralRequest:
    type: object
    properties:
      contact_id:
        type: string
      description:
        type: string
      expiration_time:
        type: string
      ip_address:
        type: string
      referral_partner_id:
        type: string
      referral_time:
        type: string
      referral_type:
        type: string
        enum:
          - COOKIE
          - PERMANENT
          - MANUAL
      source:
        type: string
  ListTagCategoriesResponse:
    type: object
    properties:
      next_page_token:
        type: string
      tag_categories:
        type: array
        items:
          $ref: '#/definitions/Tag'
  UpdateTaskResponse:
    type: object
    properties:
      assigned_to_user_id:
        type: string
      completed:
        type: boolean
      completion_time:
        type: string
      contact_id:
        type: string
      create_time:
        type: string
        description: On initial object the returned value for this property may not accurately represent the exact stored value.
      created_by_user_id:
        type: string
      description:
        type: string
      due_time:
        type: string
      id:
        type: string
      modification_time:
        type: string
      priority:
        type: string
        enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
      remind_time_mins:
        type: integer
        format: int32
      title:
        type: string
      type:
        type: string
        enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
  UpdateNoteRequest:
    type: object
    required:
      - user_id
    properties:
      contact_id:
        type: string
      text:
        type: string
      title:
        type: string
        description: A value for either "title" or "type" is required.
      type:
        type: string
        description: A value for either "title" or "type" is required. The value may be one of "Appointment", "Call", "Email", "Fax", "Letter" or "Other" in Keap Max/Pro, or an admin-configured value in Classic.
      user_id:
        type: string
  UpdateTagCategoryResponse:
    type: object
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
  StackTraceElement:
    type: object
    properties:
      className:
        type: string
      fileName:
        type: string
      lineNumber:
        type: integer
        format: int32
      methodName:
        type: string
      nativeMethod:
        type: boolean
  BatchResult:
    type: object
    properties:
      id:
        type: string
      message:
        type: string
      payload:
        type: string
      result:
        type: string
        enum:
          - CREATED
          - ERROR
          - FAILED_VALIDATION
  ContactLink:
    type: object
    properties:
      contact1_id:
        type: string
      contact2_id:
        type: string
      link_type_id:
        type: string
      link_type_name:
        type: string
  ListContactsResponse:
    type: object
    properties:
      contacts:
        type: array
        items:
          $ref: '#/definitions/Contact'
      next_page_token:
        type: string
  PatchCompanyRequest:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      company_name:
        type: string
      custom_fields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldValue'
      email_address:
        $ref: '#/definitions/EmailAddress'
      fax_number:
        $ref: '#/definitions/FaxNumber'
      notes:
        type: string
      phone_number:
        $ref: '#/definitions/PhoneNumber'
      website:
        type: string
  BasicUser:
    type: object
    properties:
      email_address:
        type: string
      family_name:
        type: string
      given_name:
        type: string
      id:
        type: string
  Batch:
    type: object
    properties:
      create_time:
        type: string
      created:
        type: integer
        format: int32
      created_by_user_id:
        type: string
      failed:
        type: integer
        format: int32
      id:
        type: string
      record_type:
        type: string
        enum:
          - CONTACT
          - COMPANY
          - NOTE
          - TAG
          - TASK
      records:
        type: array
        items:
          $ref: '#/definitions/BatchResult'
      status:
        type: string
        enum:
          - COMPLETE
          - ERROR
          - PROCESSING
      total:
        type: integer
        format: int32
  ApplyTagsResponse:
    type: object
    properties:
      results:
        type: object
        additionalProperties:
          type: string
  CustomFieldOption:
    type: object
    properties:
      id:
        type: string
      label:
        type: string
      options:
        type: array
        items:
          $ref: '#/definitions/CustomFieldOption'
  OriginRequest:
    type: object
    properties:
      ip_address:
        type: string
  CreateCustomFieldOptionRequest:
    type: object
    properties:
      label:
        type: string
      options:
        type: array
        items:
          $ref: '#/definitions/CreateCustomFieldOptionRequest'
  GetUserInfoResponse:
    type: object
    properties:
      email:
        type: string
      family_name:
        type: string
      given_name:
        type: string
      id:
        type: integer
        format: int64
      keap_id:
        type: string
      middle_name:
        type: string
      preferred_name:
        type: string
      sub:
        type: string
  ListLeadSourcesResponse:
    type: object
    properties:
      leadsources:
        type: array
        items:
          $ref: '#/definitions/LeadSource'
      next_page_token:
        type: string
  CreateNoteRequest:
    type: object
    required:
      - user_id
    properties:
      text:
        type: string
      title:
        type: string
        description: A value for either "title" or "type" is required.
      type:
        type: string
        description: A value for either "title" or "type" is required. The value may be one of "Appointment", "Call", "Email", "Fax", "Letter" or "Other" in Keap Max/Pro, or an admin-configured value in Classic.
      user_id:
        type: string
  TaggedCompany:
    type: object
    properties:
      applied_time:
        type: string
      company:
        $ref: '#/definitions/Company'
  Error:
    type: object
    properties:
      cause:
        $ref: '#/definitions/Throwable'
      localizedMessage:
        type: string
      message:
        type: string
      stackTrace:
        type: array
        items:
          $ref: '#/definitions/StackTraceElement'
      suppressed:
        type: array
        items:
          $ref: '#/definitions/Throwable'
  SocialAccount:
    type: object
    required:
      - type
    properties:
      name:
        type: string
      type:
        type: string
        enum:
          - SOCIAL_ACCOUNT_TYPE_UNSPECIFIED
          - FACEBOOK
          - LINKED_IN
          - TWITTER
          - INSTAGRAM
          - SNAPCHAT
          - YOUTUBE
          - PINTEREST
  CreatePatchTaskRequest:
    type: object
    properties:
      assigned_to_user_id:
        type: string
      completed:
        type: boolean
      completion_time:
        type: string
      contact_id:
        type: string
      description:
        type: string
      due_time:
        type: string
      priority:
        type: string
        enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
      remind_time_mins:
        type: integer
        format: int32
        description: Value in minutes before start_date to show pop-up reminder.  Acceptable values are [5,10,15,30,60,120,240,480,1440,2880]
      title:
        type: string
      type:
        type: string
        enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
  UpdateNoteResponse:
    type: object
    properties:
      assigned_to_user:
        $ref: '#/definitions/BasicUser'
      contact_id:
        type: string
      create_time:
        type: string
      id:
        type: string
      last_updated_by_user_id:
        type: string
      text:
        type: string
      title:
        type: string
      type:
        type: string
      update_time:
        type: string
  Contact:
    type: object
    properties:
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
      anniversary_date:
        type: string
      birth_date:
        type: string
      company:
        $ref: '#/definitions/BasicCompany'
      contact_type:
        type: string
      create_time:
        type: string
      custom_fields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldValue'
      email_addresses:
        type: array
        items:
          $ref: '#/definitions/EmailAddress'
      family_name:
        type: string
      fax_numbers:
        type: array
        items:
          $ref: '#/definitions/FaxNumber'
      given_name:
        type: string
      id:
        type: string
      job_title:
        type: string
      leadsource_id:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/Link'
      middle_name:
        type: string
      origin:
        $ref: '#/definitions/Origin'
      owner_id:
        type: string
      phone_numbers:
        type: array
        items:
          $ref: '#/definitions/PhoneNumber'
      preferred_locale:
        type: string
        example: en_US
      preferred_name:
        type: string
      prefix:
        type: string
      referral_code:
        type: string
      score_value:
        type: string
      social_accounts:
        type: array
        items:
          $ref: '#/definitions/SocialAccount'
      source_type:
        type: string
        enum:
          - SOURCE_TYPE_UNSPECIFIED
          - API
          - APPOINTMENT
          - FORM_API_HOSTED
          - FORM_API_INTERNAL
          - IMPORT
          - INTERNAL_FORM
          - LANDING_PAGE
          - MANUAL
          - OTHER
          - UNKNOWN
          - WEBFORM
      spouse_name:
        type: string
      suffix:
        type: string
      tag_ids:
        type: array
        items:
          type: string
      time_zone:
        type: string
      update_time:
        type: string
      website:
        type: string
  CreateContactLinkTypeRequest:
    type: object
    properties:
      max_links:
        type: integer
        format: int64
      name:
        type: string
  Provinces:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
  CreateUserRequestV2:
    type: object
    required:
      - email_address
      - given_name
    properties:
      admin:
        type: boolean
      email_address:
        $ref: '#/definitions/EmailAddressRequest'
      given_name:
        type: string
      partner:
        type: boolean
  GetNoteResponse:
    type: object
    properties:
      assigned_to_user:
        $ref: '#/definitions/BasicUser'
      contact_id:
        type: string
      create_time:
        type: string
      id:
        type: string
      last_updated_by_user_id:
        type: string
      text:
        type: string
      title:
        type: string
      type:
        type: string
      update_time:
        type: string
  Referral:
    type: object
    properties:
      contact_id:
        type: string
      description:
        type: string
      expiration_time:
        type: string
      id:
        type: string
      ip_address:
        type: string
      referral_partner_id:
        type: string
      referral_time:
        type: string
      referral_type:
        type: string
        enum:
          - COOKIE
          - PERMANENT
          - MANUAL
      source:
        type: string
  ApplyRemoveTagRequest:
    type: object
    properties:
      contact_ids:
        type: array
        items:
          type: string
  BasicCompany:
    type: object
    properties:
      company_name:
        type: string
      id:
        type: string
  PhoneNumber:
    type: object
    properties:
      extension:
        type: string
      field:
        type: string
        enum:
          - PHONE_NUMBER_FIELD_UNSPECIFIED
          - PHONE1
          - PHONE2
          - PHONE3
          - PHONE4
          - PHONE5
      number:
        type: string
      type:
        type: string
  EmailAddressRequest:
    type: object
    properties:
      email:
        type: string
      field:
        type: string
        enum:
          - EMAIL_FIELD_UNSPECIFIED
          - EMAIL1
          - EMAIL2
          - EMAIL3
      opt_in_reason:
        type: string
  CreateLeadSourceRequest:
    type: object
    properties:
      category:
        $ref: '#/definitions/LeadSourceCategory'
      description:
        type: string
      end_time:
        type: string
      medium:
        type: string
      message:
        type: string
      name:
        type: string
      start_time:
        type: string
      status_is_active:
        type: boolean
      vendor:
        type: string
  Tag:
    type: object
    properties:
      category:
        $ref: '#/definitions/CategoryReference'
      description:
        type: string
      id:
        type: string
      name:
        type: string
  BatchCreateContactRequest:
    type: object
    properties:
      contacts:
        type: array
        items:
          $ref: '#/definitions/CreatePatchContactRequest'
